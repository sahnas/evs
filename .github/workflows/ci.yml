name: CI Tests

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  quality-check:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint:all

      - name: Run unit tests
        run: pnpm test:all

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Build application
        run: pnpm build:all

      - name: Run E2E tests
        run: pnpm test:e2e

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  deploy:
    name: Deploy to Render
    needs: [quality-check, e2e-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/refactor'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Backend to Render
        run: curl "${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}"

      - name: Deploy Frontend to Render
        run: curl "${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}"
